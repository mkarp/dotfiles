[alias]
  a = add
  i = add -p
  s = status -s
  ss = status
  b = branch
  ci = commit
  co = checkout
  cp = cherry-pick
  cf = clang-format

  lg = log --graph '--pretty=tformat:%Cblue%h%Creset %Cgreen%ar%Creset %Cblue%d%Creset %s (%an)'

  st = stash
  stp = stash pop
  stl = stash list

  su = submodule update
  sur = submodule update --init --recursive

  up = "!git pull origin"
  pu = "!git push --set-upstream origin $(git symbolic-ref --short HEAD)"
  upsub = "!f() { cd $1 && git checkout master && git pull && git sur; }; f"
  upsuba = "!git submodule foreach 'git checkout master && git pull && git sur'"
  br = "!f() { git checkout master && git branch -D $1 && git branch $1 && git checkout $1; }; f"
  mm = "!f() { git add . && git stash && git checkout master && git pull && git checkout @{-1} && git merge master; }; f"
  mr = "!f() { git add . && git stash && git checkout master && git pull && git checkout @{-1} && git rebase master; }; f"
  ours = "!f() { git co --ours $@ && git add $@; }; f"
  theirs = "!f() { git co --theirs $@ && git add $@; }; f"
  commit-undo = reset --soft HEAD~
  wip = commit --allow-empty -am '[WIP]'
  skip-ci = commit --allow-empty -am '[skip ci]'
  empty = commit --allow-empty -am 'Empty commit for testing'
  squash = "!git reset $(git merge-base master $(git branch --show-current))"
  recentb = "!f() { git for-each-ref --sort=-committerdate refs/heads/ --format='%(HEAD) %(color:yellow)%(refname:short)%(color:reset)' | head;}; f"

[color]
  ui = true

[push]
  default = simple

[pull]
  ff = only

[filter "media"]
  clean = git-media-clean %f
  smudge = git-media-smudge %f

[user]
	name = Misha Karpenko
	email = mkarp@users.noreply.github.com

[core]
  editor = vim
  excludesfile = ~/.gitignore
  autocrlf = input
  protectNTFS = true

[credential]
  helper = osxkeychain

[filter "lfs"]
  smudge = git-lfs smudge -- %f
  process = git-lfs filter-process
  required = true
  clean = git-lfs clean -- %f
